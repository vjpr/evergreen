<script type="text/javascript" src="<%= url("/jasmine/jasmine.js") %>"></script>
<script type="text/javascript" src="<%= url("/jasmine/jasmine-html.js") %>"></script>
<script type="text/javascript" src="<%= url("/resources/json2.js") %>"></script>
<script type="text/javascript" src="<%= url("/resources/run.js") %>"></script>
<script type="text/javascript">
  // <![CDATA[
      <%= render_spec(@coffee_spec_helper) if @coffee_spec_helper.exist? %>;
      <%= render_spec(@js_spec_helper) if @js_spec_helper.exist? %>;
  // ]]>
</script>
<script type="text/javascript">
  // <![CDATA[
      <% if @spec %>
        <%= render_spec(@spec) %>
      <% else %>
        <% @suite.specs.each do |spec| %>
          describe("<%= spec.name %>", function() {
            <%= render_spec(spec) %>;
          });
        <% end %>
      <% end %>
  // ]]>
</script>

<div id="page">
  <h1>Evergreen</h1>
  <a class="back" href="<%= url("/") %>">Back to list</a>
</div>

<div id="test"></div>

<script type="text/javascript">
  // <![CDATA[

    //IDEA_URI = "http://localhost:8091/?message=";
    IDEA_URI = "<%= Evergreen.editor_url %>";
    // Find urls and convert to links
    function replaceURLWithHTMLLinks(text) {
      // Get the path up to the first dot before the file extension
      var exp = /(\b(https?|ftp|file):\/\/127\.0\.0\.1:3000\/(assets|evergreen\/run)\/([-A-Z0-9+&@#\/%?=~_|!:,;]*))/ig;
      // Print the first match to console for quick dev console navigation
      //var firstMatch = exp.exec(text);
      //console.log(firstMatch);
      // Return linkified urls
      return text.replace(exp,"<a href='javascript:$.get(\""+IDEA_URI+"$4.coffee\")' target='_blank'>$4</a>");
    }
    // Linkify urls
    $( 'body' ).bind("jasmine:complete", function() {
      $(".stackTrace").each(function(i){
        var text = $(this).html();
        $(this).html(replaceURLWithHTMLLinks(text));
      });
    });

    (function() {
      Evergreen.driver = <%= Evergreen.driver.to_json %>;
      <% @suite.templates.each do |template| %>
        Evergreen.templates[<%= template.name.to_json %>] = <%= template.escaped_contents %>;
      <% end %>
      var jasmineExecute = function() {
        var jasmineEnv = jasmine.getEnv();
        jasmineEnv.addReporter(new jasmine.TrivialReporter());
        jasmineEnv.addReporter(new Evergreen.ReflectiveReporter());
        jasmineEnv.execute();
      };
      if (window.addEventListener) {
        window.addEventListener("load", jasmineExecute, false);
      }
      else {
        window.attachEvent("onload", jasmineExecute);
      }

    })();
  // ]]>
</script>
